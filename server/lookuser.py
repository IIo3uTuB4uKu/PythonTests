# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'lookUsers.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from MyQtClasses import MyFrame, MyButton, MyTextBrowser
from colors import colors
from editor import Editor
from Funcs import getUsers
from mysettings import getinfo


class Ui_MainWindow(object):
    def setupUi(self, MainWindow, test_name, mychoice):
        colors_num = getinfo()[0]
        users = getUsers(test_name)
        with open(f"tests/{test_name}") as f:
                test = eval(f.read())["Name"].replace("\n", "")
        MainWindow.setObjectName("MainWindow")

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)

        #menu
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setMinimumSize(QtCore.QSize(50, 0))
        self.frame.setMaximumSize(QtCore.QSize(50, 16777215))
        self.frame.setStyleSheet(f"background-color: {colors[colors_num][5]};")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout.setObjectName("verticalLayout")
        self.verticalLayout.setSpacing(10)
        self.pushButton = MyButton(QtGui.QColor(*colors[colors_num][0]), QtGui.QColor(*colors[colors_num][1]), "border: 0px; border-radius: 5px;", self.frame)
        self.pushButton.setIcon(QtGui.QIcon(f"pics\\info{colors[colors_num][7]}.png"))
        self.pushButton.setIconSize(QtCore.QSize(25, 25))
        self.pushButton.setMinimumSize(QtCore.QSize(30, 30))
        self.pushButton.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton.setText("")
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout.addWidget(self.pushButton)
        self.pushButton_2 = MyButton(QtGui.QColor(*colors[colors_num][0]), QtGui.QColor(*colors[colors_num][1]), "border: 0px; border-radius: 5px;", self.frame)
        self.pushButton_2.setIcon(QtGui.QIcon(f"pics\\pen{colors[colors_num][7]}.png"))
        self.pushButton_2.setIconSize(QtCore.QSize(25, 25))
        self.pushButton_2.setMinimumSize(QtCore.QSize(30, 30))
        self.pushButton_2.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton_2.setText("")
        self.pushButton_2.setObjectName("pushButton_2")
        self.verticalLayout.addWidget(self.pushButton_2)
        self.pushButton_3 = MyButton(QtGui.QColor(*colors[colors_num][1]), QtGui.QColor(*colors[colors_num][1]), "border: 0px; border-radius: 5px;", self.frame)
        self.pushButton_3.setIcon(QtGui.QIcon(f"pics\\solution{colors[colors_num][7]}.png"))
        self.pushButton_3.setIconSize(QtCore.QSize(25, 25))
        self.pushButton_3.setMinimumSize(QtCore.QSize(30, 30))
        self.pushButton_3.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton_3.setText("")
        self.pushButton_3.setObjectName("pushButton_3")
        self.verticalLayout.addWidget(self.pushButton_3)
        
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem)

        self.pushButton_back = MyButton(QtGui.QColor(*colors[colors_num][0]), QtGui.QColor(*colors[colors_num][1]), "border: 0px; border-radius: 5px;", self.frame)
        self.pushButton_back.setIcon(QtGui.QIcon(f"pics\\returnpic{colors[colors_num][7]}.png"))
        self.pushButton_back.setIconSize(QtCore.QSize(25, 25))
        self.pushButton_back.setMinimumSize(QtCore.QSize(30, 30))
        self.pushButton_back.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton_back.setStyleSheet(f"background-color: {colors[colors_num][2]};\n"
"border: 0px; border-radius: 5px")
        self.pushButton_back.setText("")
        self.pushButton_back.setObjectName("pushButton_back")
        self.verticalLayout.addWidget(self.pushButton_back)

        self.horizontalLayout.addWidget(self.frame)


        self.gridFrame = QtWidgets.QFrame(self.centralwidget)
        self.gridFrame.setStyleSheet(f"background-color: {colors[colors_num][3]};")
        self.gridFrame.setObjectName("gridFrame")
        self.gridLayout = QtWidgets.QGridLayout(self.gridFrame)
        self.gridLayout.setObjectName("gridLayout")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")

        print(mychoice)

        self.comboBox = QtWidgets.QComboBox(self.gridFrame)
        self.comboBox.setStyleSheet("border: 0px;\n"
"background: #fff;\n"
"border-radius: 2px;")
        self.comboBox.setObjectName("comboBox")
        classes = ["Класс"]
        for key, value in users.items():
            classes.append(key)
        
        self.comboBox.addItem(classes[int(mychoice[0])])
        now_class = classes[int(mychoice[0])]
        classes.pop(int(mychoice[0]))
        for i in classes:
              self.comboBox.addItem(i)

        self.gridLayout_2.addWidget(self.comboBox, 1, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.gridFrame)
        self.label.setStyleSheet(f"color:{colors[colors_num][6]}")
        self.label.setMaximumWidth(400)
        self.label.setObjectName("label")
        self.gridLayout_2.addWidget(self.label, 0, 0, 1, 1)
        self.gridLayout.addLayout(self.gridLayout_2, 4, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem1, 7, 0, 1, 1)

        if mychoice[0] != "0":
                self.comboBox_2 = QtWidgets.QComboBox(self.gridFrame)
                self.comboBox_2.setStyleSheet("border: 0px;\n"
        "background: #fff;\n"
        "border-radius: 2px;")
                self.comboBox_2.setObjectName("comboBox_2")
                names = ["Имя Фамилия"]
                solutions = [""]
                for key, value in users.items():
                        for i in value:
                                if key == now_class:
                                        names.append(i.replace(".txt", ""))
                                        with open(f"solutions/{test}/{now_class}/{i}") as f:
                                                solutions.append(f.read())
                
                self.comboBox_2.addItem(names[int(mychoice[1])])
                names.pop(int(mychoice[1]))
                for i in names:
                      self.comboBox_2.addItem(i)

                self.gridLayout_2.addWidget(self.comboBox_2, 3, 0, 1, 1)
                self.label_2 = QtWidgets.QLabel(self.gridFrame)
                self.label_2.setText("<html><head/><body><p align=\"left\"><span style=\" font-size:12pt; font-weight:600;\">Имя, Фамилия</span></p></body></html>")
                self.label_2.setStyleSheet(f"color:{colors[colors_num][6]}")
                self.label_2.setObjectName("label_2")
                self.gridLayout_2.addWidget(self.label_2, 2, 0, 1, 1)

        if mychoice[1] != "0" and mychoice[0] != "0":
                self.label_3 = QtWidgets.QLabel(self.gridFrame)
                self.label_3.setObjectName("label_3")
                self.label_3.setStyleSheet(f"color:{colors[colors_num][6]}")
                self.label_3.setText("<html><head/><body><p align=\"center\"><span style=\" font-size:12pt; font-weight:600;\">Решение ученика</span></p></body></html>")
                self.gridLayout.addWidget(self.label_3, 5, 0, 1, 1)
                self.textBrowser = Editor(self, self.gridFrame)
                self.textBrowser.setText(eval(solutions[int(mychoice[1])])["solution"])
                self.textBrowser.setMinimumSize(QtCore.QSize(400, 400))
                self.textBrowser.setMaximumSize(QtCore.QSize(400, 400))
                self.textBrowser.setStyleSheet("border: 0px;\n"
        "background: #fff;\n"
        "border-radius: 2px;")
                self.textBrowser.setObjectName("textBrowser")
                self.gridLayout.addWidget(self.textBrowser, 6, 0, 1, 1)

        self.horizontalLayout.addWidget(self.gridFrame)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        return self

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p align=\"left\"><span style=\" font-size:12pt; font-weight:600;\">Класс</span></p></body></html>"))
        
